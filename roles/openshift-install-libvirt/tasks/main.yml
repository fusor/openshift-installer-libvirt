- name: Check for /dev/kvm
  stat:
    path: /dev/kvm
  register: kvm_result

- name: Fail if KVM is not enabled
  fail:
    msg: "KVM is not enabled. See https://docs.fedoraproject.org/en-US/quick-docs/getting-started-with-virtualization/ for troubleshooting"
  when: not kvm_result.stat.exists

- name: Install required packages
  dnf:
    name:
      - golang
      - libvirt
      - libvirt-devel
      - libvirt-daemon-kvm
      - qemu-kvm 
    state: latest
  become: true

- name: Configure libvirt auth_tcp
  lineinfile:
    path: /etc/libvirt/libvirtd.conf
    regexp: '^auth_tcp '
    line: 'auth_tcp = "none"'
  become: true

- name: Configure libvirt tcp_port
  lineinfile:
    path: /etc/libvirt/libvirtd.conf
    regexp: '^tcp_port '
    line: 'tcp_port = "16509"'
    insertafter: '^#tcp_port = "16509"'
  become: true

- name: Ensure libvirtd is stopped
  systemd:
    name: libvirtd
    state: stopped
  become: true

- name: Enable and start libvirtd-tcp.socket
  systemd:
    name: libvirtd.socket
    state: started
    enabled: yes
  become: true

- name: Enable and start libvirtd
  systemd:
    name: libvirtd
    state: started
    enabled: yes
  become: true

- name: Ensure IP forwarding is enabled
  sysctl:
    name: net.ipv4.ip_forward
    value: '1'
    sysctl_set: yes
  become: true

- name: Allow libvirt hosts to access the libvirt service
  firewalld:
    zone: libvirt
    service: libvirt
    permanent: false
    state: enabled
  become: true

- name: Add NetworkManager dnsmasq configuration
  copy:
    content: |
             [main]
             dns=dnsmasq
    dest: /etc/NetworkManager/conf.d/openshift.conf
  become: true

- name: Add NetworkManager dnsmasq.d configuration
  copy:
    content: |
             server=/{{ base_domain }}/{{ cluster_network.split('.') | reject('search','0') | join('.') }}.1
             address=/.apps.{{ base_domain }}/{{ cluster_network.split('.') | reject('search','0') | join('.') }}.51
             address=/.apps.{{ cluster_name }}.{{ base_domain }}/{{ cluster_network.split('.') | reject('search','0') | join('.') }}.51
    dest: /etc/NetworkManager/dnsmasq.d/openshift.{{ cluster_name }}.{{ base_domain }}.conf
  become: true

- name: Reload NetworkManager
  systemd:
    name: NetworkManager
    state: reloaded
    enabled: yes
  become: true

- name: Clone openshift-install
  git:
    repo: "{{ repo }}"
    dest: "{{ path }}"
    version: "release-{{ version }}"
    force: yes

- name: Build openshift-install
  shell: hack/build.sh
  args:
    chdir: "{{ path }}"
  environment:
    TAGS: libvirt

- name: Create cluster sub-directory
  file:
    path: "{{ path }}/bin/{{ cluster_name }}.{{ base_domain }}"
    state: directory

- name: Create install-config.yaml
  template:
    src: install-config.yaml.j2
    dest: "{{ path }}/bin/{{ cluster_name }}.{{ base_domain }}/install-config.yaml"

- name: Create manifests
  shell: ../openshift-install create manifests
  args:
    chdir: "{{ path }}/bin/{{ cluster_name }}.{{ base_domain }}"

- name: Update master RAM
  replace:
    path: "{{ item }}"
    regexp: 'domainMemory:.*'
    replace: "domainMemory: {{ master_ram }}"
  with_items:
  - "{{ path }}/bin/{{ cluster_name }}.{{ base_domain }}/openshift/99_openshift-cluster-api_master-machines-0.yaml"
  - "{{ path }}/bin/{{ cluster_name }}.{{ base_domain }}/openshift/99_openshift-cluster-api_master-machines-1.yaml"
  - "{{ path }}/bin/{{ cluster_name }}.{{ base_domain }}/openshift/99_openshift-cluster-api_master-machines-2.yaml"

- name: Update master vCPU
  replace:
    path: "{{ item }}"
    regexp: 'domainVcpu:.*'
    replace: "domainVcpu: {{ master_vcpu }}"
  with_items:
  - "{{ path }}/bin/{{ cluster_name }}.{{ base_domain }}/openshift/99_openshift-cluster-api_master-machines-0.yaml"
  - "{{ path }}/bin/{{ cluster_name }}.{{ base_domain }}/openshift/99_openshift-cluster-api_master-machines-1.yaml"
  - "{{ path }}/bin/{{ cluster_name }}.{{ base_domain }}/openshift/99_openshift-cluster-api_master-machines-2.yaml"

- name: Make masters schedulable
  replace:
    path: "{{ item }}"
    regexp: 'mastersSchedulable:.*'
    replace: "mastersSchedulable: true"
  with_items:
  - "{{ path }}/bin/{{ cluster_name }}.{{ base_domain }}/manifests/cluster-scheduler-02-config.yml"
  when: masters_schedulable

- name: Update worker RAM
  replace:
    path: "{{ item }}"
    regexp: 'domainMemory:.*'
    replace: "domainMemory: {{ worker_ram }}"
  with_items:
  - "{{ path }}/bin/{{ cluster_name }}.{{ base_domain }}/openshift/99_openshift-cluster-api_worker-machineset-0.yaml"

- name: Update worker vCPU
  replace:
    path: "{{ item }}"
    regexp: 'domainVcpu:.*'
    replace: "domainVcpu: {{ worker_vcpu }}"
  with_items:
  - "{{ path }}/bin/{{ cluster_name }}.{{ base_domain }}/openshift/99_openshift-cluster-api_worker-machineset-0.yaml"

- name: Add hostname to new virsh network
  shell: |
         virsh net-update $(virsh net-list | grep {{ cluster_name }} | awk '{ print $1 }') add dns-host \
         "<host ip='{{ cluster_network.split('.') | reject('search','0') | join('.') }}.51'><hostname>oauth-openshift.apps.{{ cluster_name }}.{{ base_domain }}</hostname></host>";
         while [ $? -ne 0 ]; do
           sleep 5
           virsh net-update $(virsh net-list | grep {{ cluster_name }} | awk '{ print $1 }') add dns-host \
           "<host ip='{{ cluster_network.split('.') | reject('search','0') | join('.') }}.51'><hostname>oauth-openshift.apps.{{ cluster_name }}.{{ base_domain }}</hostname></host>";
         done
  async: 600
  poll: 0
  become: true

- name: Run install
  shell: "../openshift-install create cluster"
  args:
    chdir: "{{ path }}/bin/{{ cluster_name }}.{{ base_domain }}"
  environment:
    OPENSHIFT_INSTALL_RELEASE_IMAGE_OVERRIDE: "{{ image }}"

- debug:
    msg:
    - "`export KUBECONFIG={{ path }}/bin/{{ cluster_name }}.{{ base_domain }}/auth/kubeconfig` to use the cluster"
    - "The console address is https://console-openshift-console.apps.{{ cluster_name }}.{{ base_domain }}"
    - "`cat {{ path }}/bin/{{ cluster_name }}.{{ base_domain }}/auth/kubeadmin-password` to get the kubeadmin users password"
